use Lidgren.Network

class MoveMessage implements IRequest, ICommand has MessageType(2)
	pro id from var as int
	pro pos from var as Point?
	cue init
		.init(0, nil)
	
	cue init(id as int, pos as Point?)
		base.init
		.id = 0
		.pos = Point()
	
	def read(m as NetIncomingMessage)
		.id = Util.readId(m)
		.pos = Point.read(m)

	def write(m as NetOutgoingMessage)
		Util.writeId(m, .id)
		.pos.write(m)

	def toString as String is override
		return 'Move [.id] to [.pos]'

	def execute(peer as NetPeer, s as ServerState)
		s.moveEntity(.id, .pos)

	def execute(peer as NetPeer, s as ClientState)
		assert .pos
		assert .id <> 0
		s.moveEntity(.id, .pos to !)

