@ref "bin/Lidgren.Network.dll"
@ref "bin/IronPython.dll"

use Lidgren.Network
use IronPython

class SherlockServer
	def main
		config = NetPeerConfiguration("MyExampleName")
		config.port = 14242
		server = NetServer(config)
		server.start
		state = ServerState(server)

		sandbox = AppDomain.createDomain("sandbox")
		engine = IronPython.Hosting.Python.CreateEngine(sandbox)
		scope = engine.createScope()
		script = engine.createScriptSourceFromString("print 'hello, world!'", SourceCodeKind.Statements)
		script.execute(scope)

		while true
			msg = server.readMessage
			if not msg
				continue
			branch msg.messageType
				on NetIncomingMessageType.VerboseDebugMessage or NetIncomingMessageType.DebugMessage _
						or NetIncomingMessageType.WarningMessage or NetIncomingMessageType.ErrorMessage
					print msg.readString
				on NetIncomingMessageType.StatusChanged
					status = msg.readByte
					reason = msg.readString
					print '[msg.senderConnection] status: [status] ([reason])'
				on NetIncomingMessageType.Data
					m = Message.readRequestFromWire(msg to !)
					m.execute(msg.senderConnection to !, state)
			server.recycle(msg)

